<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>泛型 on</title><link>https://googoo-s.github.io/tags/%E6%B3%9B%E5%9E%8B/</link><description>Recent content in 泛型 on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://googoo-s.github.io/tags/%E6%B3%9B%E5%9E%8B/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://googoo-s.github.io/Java/%E5%9F%BA%E7%A1%80/Java-%E5%8F%8D%E5%B0%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Java/%E5%9F%BA%E7%A1%80/Java-%E5%8F%8D%E5%B0%84/</guid><description>关于反射的详细解读，请看这篇文章 Java 反射机制详解。
何谓反射？ 主要是因为它赋予了我们在运行时分析类以及执行类中方法的能力。通过反射你可以获取任意一个类的所有属性和方法，你还可以调用这些方法和属性。
反射的优缺点？ 优点：反射可以让我们的代码更加灵活、为各种框架提供开箱即用的功能提供了便利。
缺点：反射让我们在运行时有了分析操作类的能力的同时，也增加了安全题，比如可以无视泛型参数的安全检查（泛型参数的安全检查发生在编译时）。另外，反射的性能也要稍差点，不过，对于框架来说实际是影响不大的。
相关阅读： Java Reflection: Why is it so slow?open in new window 。</description></item><item><title/><link>https://googoo-s.github.io/Java/%E5%9F%BA%E7%A1%80/Java-%E6%B3%9B%E5%9E%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Java/%E5%9F%BA%E7%A1%80/Java-%E6%B3%9B%E5%9E%8B/</guid><description>什么是泛型？有什么作用？ Java 泛型（Generics） 是 JDK 5 中引入的一个新特性。使用泛型参数，可以增强代码的可读性以及稳定性。
编译器可以对泛型参数进行检测，并且通过泛型参数可以指定传入的对象类型。比如 ArrayList&amp;lt;Person&amp;gt; persons = new ArrayList&amp;lt;Person&amp;gt;() 这行代码就指明了该 ArrayList 对象只能传入 Person 对象，如果传入其他类型的对象就会报错。
1 ArrayList&amp;lt;E&amp;gt; extends AbstractList&amp;lt;E&amp;gt; 并且，原生 List 返回类型是 Object ，需要手动转换类型才能使用，使用泛型后编译器自动转换。</description></item></channel></rss>