<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pythons on</title><link>https://googoo-s.github.io/python/</link><description>Recent content in Pythons on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://googoo-s.github.io/python/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://googoo-s.github.io/Python/1.Pipenv%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/1.Pipenv%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/</guid><description>安装 确保python和pip安装
1 2 python --version pip --version 安装
1 pip install --user pipenv 该安装是用户安装，需要将起添加到环境变量总</description></item><item><title/><link>https://googoo-s.github.io/Python/10.%E6%B5%8B%E8%AF%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/10.%E6%B5%8B%E8%AF%95/</guid><description/></item><item><title/><link>https://googoo-s.github.io/Python/11.%E6%97%A5%E5%BF%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/11.%E6%97%A5%E5%BF%97/</guid><description/></item><item><title/><link>https://googoo-s.github.io/Python/2.%E5%B7%A5%E7%A8%8B%E7%9A%84%E7%BB%93%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/2.%E5%B7%A5%E7%A8%8B%E7%9A%84%E7%BB%93%E6%9E%84/</guid><description>在一个健康的开发周期中，代码风格，API 设计和自动化是非常关键的。同样的，对于工程的 架构 ,仓库的结构也是关键的一部分。
当一个潜在的用户和贡献者登录到您的仓库页面时，他们会看到这些:
工程的名字
工程的描述
一系列的文件
只有当他们滚动到目录下方时才会看到您工程的README。
如果您的仓库的目录是一团糟，没有清晰的结构，他们可能要到处寻找才能找到您写的漂亮的文档。
为您的渴望的事业而奋斗，而不是仅仅只为您现在的工作而工作。</description></item><item><title/><link>https://googoo-s.github.io/Python/3.%E7%B1%BB%E5%9E%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/3.%E7%B1%BB%E5%9E%8B/</guid><description>整数 Python可以处理任意大小的整数，当然包括负整数，在程序中的表示方法和数学上的写法一模一样，例如：1，100，-8080，0，等等。
计算机由于使用二进制，所以，有时候用十六进制表示整数比较方便，十六进制用0x前缀和0-9，a-f表示，例如：0xff00，0xa5b4c3d2，等等。
对于很大的数，例如10000000000，很难数清楚0的个数。Python允许在数字中间以_分隔，因此，写成10_000_000_000和10000000000是完全一样的。十六进制数也可以写成0xa1b2_c3d4。
浮点数 浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，比如，1.23x10(9)和12.3x10(8)是完全相等的。浮点数可以用数学写法，如1.23，3.14，-9.01，等等。但是对于很大或很小的浮点数，就必须用科学计数法表示，把10用e替代，1.23x10(9)就是1.23e9，或者12.3e8，0.000012可以写成1.2e-5，等等。
整数和浮点数在计算机内部存储的方式是不同的，整数运算永远是精确的（除法难道也是精确的？是的！），而浮点数运算则可能会有四舍五入的误差。
除法运算的结果为小数，即浮点数
如果要舍弃小数部分可以使用//
1 2 3 1//2 //0 5.0//2.5 //2.0 布尔值 True</description></item><item><title/><link>https://googoo-s.github.io/Python/4.%E5%AE%B9%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/4.%E5%AE%B9%E5%99%A8/</guid><description>python 支持一种数据结构的基本概念，名为容器（container）。容器基本上就是可包含其他对象的对象。两种主要的容器是序列（如列表和元组）和映射（如字典）。在序列中，每个元素都有编号，而在映射中，每个元素都有名称（也叫键）。有一种既不是序列也不是映射的容器，它就是集合（set）
![[Pasted image 20230727232959.png]]
序列 python有多种序列，本章重点讨论其中最常用的两种：列表和元组。字符串也具有和列表和元组相同的特性。列表和元组的主要不同在于，列表是可以修改的，而元组不可以。这意味着列表适用于需要中途添加元素的情形，而元组适用于出于某种考虑需要禁止修改序列的情形。禁止修改序列通常出于技术方面的考虑，与Python的内部工作原理相关，这也是有些内置函数返回元组的原因所在。在你自己编写程序时，几乎在所有情况下都可使用列表来代替元组。一种例外情况是将元组用作字典键
索引 索引可以是正数 用索引来访问list中每一个位置的元素，记得索引是从0开始的：
1 2 3 4 5 6 7 8 9 10 &amp;gt;&amp;gt;&amp;gt; classmates[0] &amp;#39;Michael&amp;#39; &amp;gt;&amp;gt;&amp;gt; classmates[1] &amp;#39;Bob&amp;#39; &amp;gt;&amp;gt;&amp;gt; classmates[2] &amp;#39;Tracy&amp;#39; &amp;gt;&amp;gt;&amp;gt; classmates[3] Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; IndexError: list index out of range 当索引超出了范围时，Python会报一个IndexError错误，所以，要确保索引不要越界，记得最后一个元素的索引是len(classmates) - 1。</description></item><item><title/><link>https://googoo-s.github.io/Python/4.%E6%B5%81%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/4.%E6%B5%81%E7%A8%8B/</guid><description/></item><item><title/><link>https://googoo-s.github.io/Python/5.%E5%87%BD%E6%95%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/5.%E5%87%BD%E6%95%B0/</guid><description/></item><item><title/><link>https://googoo-s.github.io/Python/6.%E6%A8%A1%E5%9D%97%E5%8C%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/6.%E6%A8%A1%E5%9D%97%E5%8C%85/</guid><description/></item><item><title/><link>https://googoo-s.github.io/Python/7.%E7%B1%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/7.%E7%B1%BB/</guid><description/></item><item><title/><link>https://googoo-s.github.io/Python/8.%E5%BC%82%E5%B8%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/8.%E5%BC%82%E5%B8%B8/</guid><description/></item><item><title/><link>https://googoo-s.github.io/Python/9.%E6%A0%87%E5%87%86%E5%BA%93/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/9.%E6%A0%87%E5%87%86%E5%BA%93/</guid><description/></item><item><title/><link>https://googoo-s.github.io/Python/python-%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googoo-s.github.io/Python/python-%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99/</guid><description>![[python编程快速上手-让繁琐工作自动化.pdf]]</description></item></channel></rss>